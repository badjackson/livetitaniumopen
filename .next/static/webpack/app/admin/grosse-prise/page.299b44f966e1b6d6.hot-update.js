"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin/grosse-prise/page",{

/***/ "(app-pages-browser)/./src/lib/firestore-entries.ts":
/*!**************************************!*\
  !*** ./src/lib/firestore-entries.ts ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   subscribeBigCatchAll: function() { return /* binding */ subscribeBigCatchAll; },\n/* harmony export */   subscribeHourlyAll: function() { return /* binding */ subscribeHourlyAll; },\n/* harmony export */   upsertBigCatch: function() { return /* binding */ upsertBigCatch; },\n/* harmony export */   upsertHourlyEntry: function() { return /* binding */ upsertHourlyEntry; }\n/* harmony export */ });\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./firebase */ \"(app-pages-browser)/./src/lib/firebase.ts\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/firestore */ \"(app-pages-browser)/./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n\n\n// Error handling wrapper\nasync function handleFirestoreOperation(operation) {\n    try {\n        return await operation();\n    } catch (error) {\n        console.error(\"Firestore operation failed:\", error);\n        if (error.code === \"permission-denied\") {\n            console.warn(\"Firebase Security Rules need to be updated. Check the console for required rules.\");\n        }\n        return null;\n    }\n}\nasync function upsertHourlyEntry(p) {\n    const id = \"\".concat(p.sector, \"-\").concat(p.hour, \"-\").concat(p.competitorId);\n    return await handleFirestoreOperation(async ()=>{\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.setDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_0__.db, \"hourly_entries\", id), {\n            ...p,\n            timestamp: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)()\n        }, {\n            merge: true\n        });\n    });\n}\nfunction subscribeHourlyAll(cb) {\n    return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.onSnapshot)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_0__.db, \"hourly_entries\"), (snap)=>cb(snap.docs.map((d)=>({\n                id: d.id,\n                ...d.data()\n            }))), (error)=>{\n        console.error(\"Error subscribing to hourly entries:\", error);\n        if (error.code === \"permission-denied\") {\n            console.warn(\"Firebase Security Rules need to be updated for hourly_entries collection.\");\n        }\n        if (error.code === \"permission-denied\") {\n            console.warn(\"Firebase Security Rules need to be updated for hourly_entries collection.\");\n        }\n    });\n}\nasync function upsertBigCatch(p) {\n    const id = \"\".concat(p.sector, \"-\").concat(p.competitorId);\n    return await handleFirestoreOperation(async ()=>{\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.setDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_0__.db, \"big_catches\", id), {\n            ...p,\n            timestamp: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)()\n        }, {\n            merge: true\n        });\n    });\n}\nfunction subscribeBigCatchAll(cb) {\n    return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.onSnapshot)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_0__.db, \"big_catches\"), (snap)=>cb(snap.docs.map((d)=>({\n                id: d.id,\n                ...d.data()\n            }))), (error)=>{\n        console.error(\"Error subscribing to big catches:\", error);\n        if (error.code === \"permission-denied\") {\n            console.warn(\"Firebase Security Rules need to be updated for big_catches collection.\");\n        }\n        if (error.code === \"permission-denied\") {\n            console.warn(\"Firebase Security Rules need to be updated for big_catches collection.\");\n        }\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvZmlyZXN0b3JlLWVudHJpZXMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWdDO0FBSUo7QUFFNUIseUJBQXlCO0FBQ3pCLGVBQWVNLHlCQUE0QkMsU0FBMkI7SUFDcEUsSUFBSTtRQUNGLE9BQU8sTUFBTUE7SUFDZixFQUFFLE9BQU9DLE9BQVk7UUFDbkJDLFFBQVFELEtBQUssQ0FBQywrQkFBK0JBO1FBQzdDLElBQUlBLE1BQU1FLElBQUksS0FBSyxxQkFBcUI7WUFDdENELFFBQVFFLElBQUksQ0FBQztRQUNmO1FBQ0EsT0FBTztJQUNUO0FBQ0Y7QUFFTyxlQUFlQyxrQkFBa0JDLENBSXZDO0lBQ0MsTUFBTUMsS0FBSyxHQUFlRCxPQUFaQSxFQUFFRSxNQUFNLEVBQUMsS0FBYUYsT0FBVkEsRUFBRUcsSUFBSSxFQUFDLEtBQWtCLE9BQWZILEVBQUVJLFlBQVk7SUFDbEQsT0FBTyxNQUFNWCx5QkFBeUI7UUFDcEMsTUFBTUosMERBQU1BLENBQUNELHVEQUFHQSxDQUFDRCx5Q0FBRUEsRUFBRSxrQkFBa0JjLEtBQUs7WUFBRSxHQUFHRCxDQUFDO1lBQUVLLFdBQVdmLG1FQUFlQTtRQUFHLEdBQUc7WUFBRWdCLE9BQU87UUFBSztJQUNwRztBQUNGO0FBRU8sU0FBU0MsbUJBQW1CQyxFQUF5QjtJQUMxRCxPQUFPakIsOERBQVVBLENBQ2ZDLDhEQUFVQSxDQUFDTCx5Q0FBRUEsRUFBRSxtQkFDZnNCLENBQUFBLE9BQVFELEdBQUdDLEtBQUtDLElBQUksQ0FBQ0MsR0FBRyxDQUFDQyxDQUFBQSxJQUFNO2dCQUFFWCxJQUFJVyxFQUFFWCxFQUFFO2dCQUFFLEdBQUdXLEVBQUVDLElBQUksRUFBRTtZQUFDLE1BQ3ZEbEIsQ0FBQUE7UUFDRUMsUUFBUUQsS0FBSyxDQUFDLHdDQUF3Q0E7UUFDdEQsSUFBSUEsTUFBTUUsSUFBSSxLQUFLLHFCQUFxQjtZQUN0Q0QsUUFBUUUsSUFBSSxDQUFDO1FBQ2Y7UUFDQSxJQUFJSCxNQUFNRSxJQUFJLEtBQUsscUJBQXFCO1lBQ3RDRCxRQUFRRSxJQUFJLENBQUM7UUFDZjtJQUNGO0FBRUo7QUFFTyxlQUFlZ0IsZUFBZWQsQ0FHcEM7SUFDQyxNQUFNQyxLQUFLLEdBQWVELE9BQVpBLEVBQUVFLE1BQU0sRUFBQyxLQUFrQixPQUFmRixFQUFFSSxZQUFZO0lBQ3hDLE9BQU8sTUFBTVgseUJBQXlCO1FBQ3BDLE1BQU1KLDBEQUFNQSxDQUFDRCx1REFBR0EsQ0FBQ0QseUNBQUVBLEVBQUUsZUFBZWMsS0FBSztZQUFFLEdBQUdELENBQUM7WUFBRUssV0FBV2YsbUVBQWVBO1FBQUcsR0FBRztZQUFFZ0IsT0FBTztRQUFLO0lBQ2pHO0FBQ0Y7QUFFTyxTQUFTUyxxQkFBcUJQLEVBQXlCO0lBQzVELE9BQU9qQiw4REFBVUEsQ0FDZkMsOERBQVVBLENBQUNMLHlDQUFFQSxFQUFFLGdCQUNmc0IsQ0FBQUEsT0FBUUQsR0FBR0MsS0FBS0MsSUFBSSxDQUFDQyxHQUFHLENBQUNDLENBQUFBLElBQU07Z0JBQUVYLElBQUlXLEVBQUVYLEVBQUU7Z0JBQUUsR0FBR1csRUFBRUMsSUFBSSxFQUFFO1lBQUMsTUFDdkRsQixDQUFBQTtRQUNFQyxRQUFRRCxLQUFLLENBQUMscUNBQXFDQTtRQUNuRCxJQUFJQSxNQUFNRSxJQUFJLEtBQUsscUJBQXFCO1lBQ3RDRCxRQUFRRSxJQUFJLENBQUM7UUFDZjtRQUNBLElBQUlILE1BQU1FLElBQUksS0FBSyxxQkFBcUI7WUFDdENELFFBQVFFLElBQUksQ0FBQztRQUNmO0lBQ0Y7QUFFSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvbGliL2ZpcmVzdG9yZS1lbnRyaWVzLnRzPzMwY2IiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGIgfSBmcm9tICcuL2ZpcmViYXNlJztcbmltcG9ydCB7XG4gIGRvYywgc2V0RG9jLCBzZXJ2ZXJUaW1lc3RhbXAsIG9uU25hcHNob3QsXG4gIGNvbGxlY3Rpb25cbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcblxuLy8gRXJyb3IgaGFuZGxpbmcgd3JhcHBlclxuYXN5bmMgZnVuY3Rpb24gaGFuZGxlRmlyZXN0b3JlT3BlcmF0aW9uPFQ+KG9wZXJhdGlvbjogKCkgPT4gUHJvbWlzZTxUPik6IFByb21pc2U8VCB8IG51bGw+IHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gYXdhaXQgb3BlcmF0aW9uKCk7XG4gIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcbiAgICBjb25zb2xlLmVycm9yKCdGaXJlc3RvcmUgb3BlcmF0aW9uIGZhaWxlZDonLCBlcnJvcik7XG4gICAgaWYgKGVycm9yLmNvZGUgPT09ICdwZXJtaXNzaW9uLWRlbmllZCcpIHtcbiAgICAgIGNvbnNvbGUud2FybignRmlyZWJhc2UgU2VjdXJpdHkgUnVsZXMgbmVlZCB0byBiZSB1cGRhdGVkLiBDaGVjayB0aGUgY29uc29sZSBmb3IgcmVxdWlyZWQgcnVsZXMuJyk7XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1cHNlcnRIb3VybHlFbnRyeShwOiB7XG4gIHNlY3Rvcjogc3RyaW5nOyBob3VyOiBudW1iZXI7IGNvbXBldGl0b3JJZDogc3RyaW5nO1xuICBib3hOdW1iZXI6IG51bWJlcjsgZmlzaENvdW50OiBudW1iZXI7IHRvdGFsV2VpZ2h0OiBudW1iZXI7XG4gIHN0YXR1czogc3RyaW5nOyBzb3VyY2U6ICdKdWRnZSd8J0FkbWluJzsgdXBkYXRlZEJ5OiBzdHJpbmc7XG59KSB7XG4gIGNvbnN0IGlkID0gYCR7cC5zZWN0b3J9LSR7cC5ob3VyfS0ke3AuY29tcGV0aXRvcklkfWA7XG4gIHJldHVybiBhd2FpdCBoYW5kbGVGaXJlc3RvcmVPcGVyYXRpb24oYXN5bmMgKCkgPT4ge1xuICAgIGF3YWl0IHNldERvYyhkb2MoZGIsICdob3VybHlfZW50cmllcycsIGlkKSwgeyAuLi5wLCB0aW1lc3RhbXA6IHNlcnZlclRpbWVzdGFtcCgpIH0sIHsgbWVyZ2U6IHRydWUgfSk7XG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3Vic2NyaWJlSG91cmx5QWxsKGNiOiAocm93czogYW55W10pID0+IHZvaWQpIHtcbiAgcmV0dXJuIG9uU25hcHNob3QoXG4gICAgY29sbGVjdGlvbihkYiwgJ2hvdXJseV9lbnRyaWVzJyksIFxuICAgIHNuYXAgPT4gY2Ioc25hcC5kb2NzLm1hcChkID0+ICh7IGlkOiBkLmlkLCAuLi5kLmRhdGEoKSB9KSkpLFxuICAgIGVycm9yID0+IHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHN1YnNjcmliaW5nIHRvIGhvdXJseSBlbnRyaWVzOicsIGVycm9yKTtcbiAgICAgIGlmIChlcnJvci5jb2RlID09PSAncGVybWlzc2lvbi1kZW5pZWQnKSB7XG4gICAgICAgIGNvbnNvbGUud2FybignRmlyZWJhc2UgU2VjdXJpdHkgUnVsZXMgbmVlZCB0byBiZSB1cGRhdGVkIGZvciBob3VybHlfZW50cmllcyBjb2xsZWN0aW9uLicpO1xuICAgICAgfVxuICAgICAgaWYgKGVycm9yLmNvZGUgPT09ICdwZXJtaXNzaW9uLWRlbmllZCcpIHtcbiAgICAgICAgY29uc29sZS53YXJuKCdGaXJlYmFzZSBTZWN1cml0eSBSdWxlcyBuZWVkIHRvIGJlIHVwZGF0ZWQgZm9yIGhvdXJseV9lbnRyaWVzIGNvbGxlY3Rpb24uJyk7XG4gICAgICB9XG4gICAgfVxuICApO1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdXBzZXJ0QmlnQ2F0Y2gocDoge1xuICBzZWN0b3I6IHN0cmluZzsgY29tcGV0aXRvcklkOiBzdHJpbmc7IGJveE51bWJlcjogbnVtYmVyO1xuICBiaWdnZXN0Q2F0Y2g6IG51bWJlcjsgc3RhdHVzOiBzdHJpbmc7IHNvdXJjZTogJ0p1ZGdlJ3wnQWRtaW4nOyB1cGRhdGVkQnk6IHN0cmluZztcbn0pIHtcbiAgY29uc3QgaWQgPSBgJHtwLnNlY3Rvcn0tJHtwLmNvbXBldGl0b3JJZH1gO1xuICByZXR1cm4gYXdhaXQgaGFuZGxlRmlyZXN0b3JlT3BlcmF0aW9uKGFzeW5jICgpID0+IHtcbiAgICBhd2FpdCBzZXREb2MoZG9jKGRiLCAnYmlnX2NhdGNoZXMnLCBpZCksIHsgLi4ucCwgdGltZXN0YW1wOiBzZXJ2ZXJUaW1lc3RhbXAoKSB9LCB7IG1lcmdlOiB0cnVlIH0pO1xuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN1YnNjcmliZUJpZ0NhdGNoQWxsKGNiOiAocm93czogYW55W10pID0+IHZvaWQpIHtcbiAgcmV0dXJuIG9uU25hcHNob3QoXG4gICAgY29sbGVjdGlvbihkYiwgJ2JpZ19jYXRjaGVzJyksIFxuICAgIHNuYXAgPT4gY2Ioc25hcC5kb2NzLm1hcChkID0+ICh7IGlkOiBkLmlkLCAuLi5kLmRhdGEoKSB9KSkpLFxuICAgIGVycm9yID0+IHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHN1YnNjcmliaW5nIHRvIGJpZyBjYXRjaGVzOicsIGVycm9yKTtcbiAgICAgIGlmIChlcnJvci5jb2RlID09PSAncGVybWlzc2lvbi1kZW5pZWQnKSB7XG4gICAgICAgIGNvbnNvbGUud2FybignRmlyZWJhc2UgU2VjdXJpdHkgUnVsZXMgbmVlZCB0byBiZSB1cGRhdGVkIGZvciBiaWdfY2F0Y2hlcyBjb2xsZWN0aW9uLicpO1xuICAgICAgfVxuICAgICAgaWYgKGVycm9yLmNvZGUgPT09ICdwZXJtaXNzaW9uLWRlbmllZCcpIHtcbiAgICAgICAgY29uc29sZS53YXJuKCdGaXJlYmFzZSBTZWN1cml0eSBSdWxlcyBuZWVkIHRvIGJlIHVwZGF0ZWQgZm9yIGJpZ19jYXRjaGVzIGNvbGxlY3Rpb24uJyk7XG4gICAgICB9XG4gICAgfVxuICApO1xufSJdLCJuYW1lcyI6WyJkYiIsImRvYyIsInNldERvYyIsInNlcnZlclRpbWVzdGFtcCIsIm9uU25hcHNob3QiLCJjb2xsZWN0aW9uIiwiaGFuZGxlRmlyZXN0b3JlT3BlcmF0aW9uIiwib3BlcmF0aW9uIiwiZXJyb3IiLCJjb25zb2xlIiwiY29kZSIsIndhcm4iLCJ1cHNlcnRIb3VybHlFbnRyeSIsInAiLCJpZCIsInNlY3RvciIsImhvdXIiLCJjb21wZXRpdG9ySWQiLCJ0aW1lc3RhbXAiLCJtZXJnZSIsInN1YnNjcmliZUhvdXJseUFsbCIsImNiIiwic25hcCIsImRvY3MiLCJtYXAiLCJkIiwiZGF0YSIsInVwc2VydEJpZ0NhdGNoIiwic3Vic2NyaWJlQmlnQ2F0Y2hBbGwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/firestore-entries.ts\n"));

/***/ })

});