"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/firestore-services.ts":
/*!***************************************!*\
  !*** ./src/lib/firestore-services.ts ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BigCatchService: function() { return /* binding */ BigCatchService; },\n/* harmony export */   COLLECTIONS: function() { return /* binding */ COLLECTIONS; },\n/* harmony export */   CompetitionSettingsService: function() { return /* binding */ CompetitionSettingsService; },\n/* harmony export */   CompetitorService: function() { return /* binding */ CompetitorService; },\n/* harmony export */   HourlyEntryService: function() { return /* binding */ HourlyEntryService; },\n/* harmony export */   JudgeService: function() { return /* binding */ JudgeService; },\n/* harmony export */   PublicAppearanceService: function() { return /* binding */ PublicAppearanceService; },\n/* harmony export */   auditLog: function() { return /* binding */ auditLog; },\n/* harmony export */   deleteCompetitor: function() { return /* binding */ deleteCompetitor; },\n/* harmony export */   deleteJudge: function() { return /* binding */ deleteJudge; },\n/* harmony export */   saveCompetitionSettings: function() { return /* binding */ saveCompetitionSettings; },\n/* harmony export */   saveCompetitor: function() { return /* binding */ saveCompetitor; },\n/* harmony export */   saveJudge: function() { return /* binding */ saveJudge; },\n/* harmony export */   savePublicAppearanceSettings: function() { return /* binding */ savePublicAppearanceSettings; },\n/* harmony export */   subscribeCompetitionSettings: function() { return /* binding */ subscribeCompetitionSettings; },\n/* harmony export */   subscribeCompetitors: function() { return /* binding */ subscribeCompetitors; },\n/* harmony export */   subscribeJudges: function() { return /* binding */ subscribeJudges; },\n/* harmony export */   subscribePublicAppearanceSettings: function() { return /* binding */ subscribePublicAppearanceSettings; }\n/* harmony export */ });\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/firestore */ \"(app-pages-browser)/./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./firebase */ \"(app-pages-browser)/./src/lib/firebase.ts\");\n\n\n// Collection names\nconst COLLECTIONS = {\n    COMPETITORS: \"competitors\",\n    HOURLY_ENTRIES: \"hourly_entries\",\n    BIG_CATCHES: \"big_catches\",\n    JUDGES: \"judges\",\n    COMPETITION_SETTINGS: \"competitionSettings\",\n    PUBLIC_APPEARANCE_SETTINGS: \"publicAppearanceSettings\"\n};\n// Competitor Service\nclass CompetitorService {\n    static async saveCompetitor(competitor) {\n        try {\n            const docRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, COLLECTIONS.COMPETITORS, competitor.id);\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.setDoc)(docRef, {\n                ...competitor,\n                createdAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)(),\n                updatedAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)()\n            }, {\n                merge: true\n            });\n            return {\n                success: true\n            };\n        } catch (error) {\n            console.error(\"Error saving competitor:\", error);\n            return {\n                success: false,\n                error\n            };\n        }\n    }\n    static async getAllCompetitors() {\n        try {\n            const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, COLLECTIONS.COMPETITORS));\n            return querySnapshot.docs.map((doc)=>({\n                    id: doc.id,\n                    ...doc.data()\n                }));\n        } catch (error) {\n            console.error(\"Error getting competitors:\", error);\n            return [];\n        }\n    }\n    static subscribeToCompetitors(callback) {\n        return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.onSnapshot)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, COLLECTIONS.COMPETITORS), (snapshot)=>{\n            const competitors = snapshot.docs.map((doc)=>({\n                    id: doc.id,\n                    ...doc.data()\n                }));\n            callback(competitors);\n        }, (error)=>{\n            console.error(\"Error listening to competitors:\", error);\n        });\n    }\n    static async deleteCompetitor(id) {\n        try {\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.deleteDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, COLLECTIONS.COMPETITORS, id));\n            return {\n                success: true\n            };\n        } catch (error) {\n            console.error(\"Error deleting competitor:\", error);\n            return {\n                success: false,\n                error\n            };\n        }\n    }\n}\n// Hourly Entry Service\nclass HourlyEntryService {\n    static async saveHourlyEntry(entry) {\n        try {\n            const docId = \"\".concat(entry.sector, \"-\").concat(entry.hour, \"-\").concat(entry.competitorId);\n            const docRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, COLLECTIONS.HOURLY_ENTRIES, docId);\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.setDoc)(docRef, {\n                ...entry,\n                id: docId,\n                timestamp: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)()\n            }, {\n                merge: true\n            });\n            return {\n                success: true\n            };\n        } catch (error) {\n            console.error(\"Error saving hourly entry:\", error);\n            return {\n                success: false,\n                error\n            };\n        }\n    }\n    static subscribeToHourlyEntries(callback) {\n        return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.onSnapshot)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, COLLECTIONS.HOURLY_ENTRIES), (snapshot)=>{\n            const entries = snapshot.docs.map((doc)=>({\n                    id: doc.id,\n                    ...doc.data()\n                }));\n            callback(entries);\n        }, (error)=>{\n            console.error(\"Error listening to hourly entries:\", error);\n        });\n    }\n}\n// Big Catch Service\nclass BigCatchService {\n    static async saveBigCatch(entry) {\n        try {\n            const docId = \"\".concat(entry.sector, \"-\").concat(entry.competitorId);\n            const docRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, COLLECTIONS.BIG_CATCHES, docId);\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.setDoc)(docRef, {\n                ...entry,\n                id: docId,\n                timestamp: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)()\n            }, {\n                merge: true\n            });\n            return {\n                success: true\n            };\n        } catch (error) {\n            console.error(\"Error saving big catch:\", error);\n            return {\n                success: false,\n                error\n            };\n        }\n    }\n    static subscribeToBigCatches(callback) {\n        return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.onSnapshot)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, COLLECTIONS.BIG_CATCHES), (snapshot)=>{\n            const entries = snapshot.docs.map((doc)=>({\n                    id: doc.id,\n                    ...doc.data()\n                }));\n            callback(entries);\n        }, (error)=>{\n            console.error(\"Error listening to big catches:\", error);\n        });\n    }\n}\n// Judge Service\nclass JudgeService {\n    static async saveJudge(judge) {\n        try {\n            const docRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, COLLECTIONS.JUDGES, judge.uid);\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.setDoc)(docRef, {\n                ...judge,\n                createdAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)(),\n                updatedAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)()\n            }, {\n                merge: true\n            });\n            return {\n                success: true\n            };\n        } catch (error) {\n            console.error(\"Error saving judge:\", error);\n            return {\n                success: false,\n                error\n            };\n        }\n    }\n    static async deleteJudge(id) {\n        try {\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.deleteDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, COLLECTIONS.JUDGES, id));\n            return {\n                success: true\n            };\n        } catch (error) {\n            console.error(\"Error deleting judge:\", error);\n            return {\n                success: false,\n                error\n            };\n        }\n    }\n    static async getJudgeByUid(uid) {\n        try {\n            const docRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, COLLECTIONS.JUDGES, uid);\n            const docSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDoc)(docRef);\n            if (docSnap.exists()) {\n                return {\n                    uid: docSnap.id,\n                    ...docSnap.data()\n                };\n            }\n            return null;\n        } catch (error) {\n            console.error(\"Error getting judge:\", error);\n            return null;\n        }\n    }\n    static subscribeToJudges(callback) {\n        return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.onSnapshot)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, COLLECTIONS.JUDGES), (snapshot)=>{\n            const judges = snapshot.docs.map((doc)=>({\n                    uid: doc.id,\n                    ...doc.data()\n                }));\n            callback(judges);\n        }, (error)=>{\n            console.error(\"Error listening to judges:\", error);\n        });\n    }\n}\n// Competition Settings Service\nclass CompetitionSettingsService {\n    static async saveSettings(settings) {\n        try {\n            const docRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, COLLECTIONS.COMPETITION_SETTINGS, \"main\");\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.setDoc)(docRef, {\n                ...settings,\n                updatedAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)()\n            }, {\n                merge: true\n            });\n            return {\n                success: true\n            };\n        } catch (error) {\n            console.error(\"Error saving competition settings:\", error);\n            return {\n                success: false,\n                error\n            };\n        }\n    }\n    static async getSettings() {\n        try {\n            const docRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, COLLECTIONS.COMPETITION_SETTINGS, \"main\");\n            const docSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDoc)(docRef);\n            if (docSnap.exists()) {\n                return {\n                    id: docSnap.id,\n                    ...docSnap.data()\n                };\n            }\n            return null;\n        } catch (error) {\n            console.error(\"Error getting competition settings:\", error);\n            return null;\n        }\n    }\n    static subscribeToSettings(callback) {\n        return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.onSnapshot)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, COLLECTIONS.COMPETITION_SETTINGS, \"main\"), (doc)=>{\n            if (doc.exists()) {\n                callback({\n                    id: doc.id,\n                    ...doc.data()\n                });\n            } else {\n                callback(null);\n            }\n        }, (error)=>{\n            console.error(\"Error listening to competition settings:\", error);\n        });\n    }\n}\n// Public Appearance Settings Service\nclass PublicAppearanceService {\n    static async saveSettings(settings) {\n        try {\n            const docRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, COLLECTIONS.PUBLIC_APPEARANCE_SETTINGS, \"main\");\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.setDoc)(docRef, {\n                ...settings,\n                updatedAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)()\n            }, {\n                merge: true\n            });\n            return {\n                success: true\n            };\n        } catch (error) {\n            console.error(\"Error saving public appearance settings:\", error);\n            return {\n                success: false,\n                error\n            };\n        }\n    }\n    static async getSettings() {\n        try {\n            const docRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, COLLECTIONS.PUBLIC_APPEARANCE_SETTINGS, \"main\");\n            const docSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDoc)(docRef);\n            if (docSnap.exists()) {\n                return {\n                    id: docSnap.id,\n                    ...docSnap.data()\n                };\n            }\n            return null;\n        } catch (error) {\n            console.error(\"Error getting public appearance settings:\", error);\n            return null;\n        }\n    }\n    static subscribeToSettings(callback) {\n        return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.onSnapshot)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, COLLECTIONS.PUBLIC_APPEARANCE_SETTINGS, \"main\"), (doc)=>{\n            if (doc.exists()) {\n                callback({\n                    id: doc.id,\n                    ...doc.data()\n                });\n            } else {\n                callback(null);\n            }\n        }, (error)=>{\n            console.error(\"Error listening to public appearance settings:\", error);\n            // Provide fallback null data on permission errors\n            callback(null);\n        });\n    }\n}\n// Export convenience functions for direct use\nconst subscribeCompetitors = CompetitorService.subscribeToCompetitors;\nconst subscribeJudges = JudgeService.subscribeToJudges;\nconst subscribeCompetitionSettings = CompetitionSettingsService.subscribeToSettings;\nconst subscribePublicAppearanceSettings = PublicAppearanceService.subscribeToSettings;\nconst saveCompetitor = CompetitorService.saveCompetitor;\nconst deleteCompetitor = CompetitorService.deleteCompetitor;\nconst saveJudge = JudgeService.saveJudge;\nconst deleteJudge = JudgeService.deleteJudge;\nconst saveCompetitionSettings = CompetitionSettingsService.saveSettings;\nconst savePublicAppearanceSettings = PublicAppearanceService.saveSettings;\n// Audit log function\nasync function auditLog(data) {\n    try {\n        // Store audit log in localStorage for now\n        const logs = JSON.parse(localStorage.getItem(\"auditLogs\") || \"[]\");\n        logs.push({\n            ...data,\n            timestamp: new Date().toISOString()\n        });\n        localStorage.setItem(\"auditLogs\", JSON.stringify(logs));\n    } catch (error) {\n        console.error(\"Error logging audit:\", error);\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/firestore-services.ts\n"));

/***/ })

});